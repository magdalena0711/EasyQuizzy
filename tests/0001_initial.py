# Generated by Django 4.2.11 on 2024-04-10 08:26

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Kategorija',
            fields=[
                ('idkat', models.AutoField(db_column='IdKat', primary_key=True, serialize=False)),
                ('naziv', models.CharField(db_column='Naziv', max_length=45)),
                ('slika', models.TextField(db_column='Slika')),
            ],
            options={
                'db_table': 'kategorija',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Ocena',
            fields=[
                ('idoce', models.AutoField(db_column='IdOce', primary_key=True, serialize=False)),
                ('vrednost_ocene', models.IntegerField(db_column='Vrednost_ocene')),
            ],
            options={
                'db_table': 'ocena',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Pitanje',
            fields=[
                ('idpit', models.AutoField(db_column='IdPit', primary_key=True, serialize=False)),
                ('tekst_pitanja', models.CharField(db_column='Tekst_pitanja', max_length=250, unique=True)),
                ('tezina_pitanja', models.IntegerField(blank=True, db_column='Tezina_pitanja', null=True)),
                ('tacan_odgovor', models.CharField(blank=True, db_column='Tacan_odgovor', max_length=125, null=True)),
                ('netacan1', models.CharField(blank=True, db_column='Netacan1', max_length=125, null=True)),
                ('netacan2', models.CharField(blank=True, db_column='Netacan2', max_length=125, null=True)),
                ('netacan3', models.CharField(blank=True, db_column='Netacan3', max_length=125, null=True)),
                ('zbir_ocena', models.IntegerField(db_column='Zbir_ocena')),
                ('broj_ocena', models.IntegerField(db_column='Broj_ocena')),
                ('prosecna_ocena', models.DecimalField(db_column='Prosecna_ocena', decimal_places=3, max_digits=6)),
                ('status', models.IntegerField(db_column='Status')),
            ],
            options={
                'db_table': 'pitanje',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Korisnik',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('idkor', models.AutoField(db_column='IdKor', primary_key=True, serialize=False)),
                ('korisnicko_ime', models.CharField(db_column='Korisnicko_ime', max_length=45)),
                ('lozinka', models.CharField(db_column='Lozinka', max_length=45)),
                ('ime', models.CharField(db_column='Ime', max_length=45)),
                ('prezime', models.CharField(db_column='Prezime', max_length=45)),
                ('email', models.CharField(db_column='Email', max_length=45)),
                ('pol', models.CharField(db_column='Pol', max_length=1)),
                ('broj_poena', models.IntegerField(db_column='Broj_poena')),
                ('nivo', models.IntegerField(db_column='Nivo')),
                ('vazeci', models.IntegerField(db_column='Vazeci')),
            ],
            options={
                'db_table': 'korisnik',
                'managed': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Administrator',
            fields=[
                ('idkor', models.OneToOneField(db_column='IdKor', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'administrator',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Moderator',
            fields=[
                ('idkor', models.OneToOneField(db_column='IdKor', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'moderator',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RegistrovaniKorisnik',
            fields=[
                ('idkor', models.OneToOneField(db_column='IdKor', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'registrovani_korisnik',
                'managed': False,
            },
        ),
    ]
